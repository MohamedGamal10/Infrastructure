pipeline {
    agent any

    stages {
        stage('Get Running EC2 Instances') {
            steps {
                script {
                    withAWS(credentials: 'aws_cred', region: 'eu-west-1') {
                     // Retrieve private IPs of EC2 instances in the ASG
                    def privateIps = sh(returnStdout: true, script: """
                        aws autoscaling describe-auto-scaling-instances --query 'AutoScalingInstances[?AutoScalingGroupName==`$ASG_NAME`].InstanceId' --output text | \
                        xargs -I {} aws ec2 describe-instances --instance-ids {} \
                        --query 'Reservations[*].Instances[*].PrivateIpAddress' --output text
                    """).trim().split()

                    // Loop over each private IP and SSH to deploy the Docker image
                    for (ip in privateIps) {
                        sh """
                        ssh -i $SSH_KEY -o ProxyCommand="ssh -i $SSH_KEY -W %h:%p ec2-user@$BASTION_HOST" ec2-user@$ip << EOF
                            docker stop my-react-app || true
                            docker rm my-react-app || true
                            docker pull $DOCKER_IMAGE
                            docker run -d --name my-react-app -p80:80 $DOCKER_IMAGE
                        EOF
                        """
                    }
                    }
                }
            }
        }
    }
}
